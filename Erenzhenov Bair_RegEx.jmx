<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.6.3">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Erenzhenov Bair">
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
    </TestPlan>
    <hashTree>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
        <collectionProp name="Arguments.arguments">
          <elementProp name="path_for_file" elementType="Argument">
            <stringProp name="Argument.name">path_for_file</stringProp>
            <stringProp name="Argument.value">C:/Users/user/Desktop/data_for_regex.txt</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="UC01_habr" enabled="true">
        <intProp name="ThreadGroup.num_threads">1</intProp>
        <intProp name="ThreadGroup.ramp_time">1</intProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller">
          <stringProp name="LoopController.loops">1</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
      </ThreadGroup>
      <hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="UC01_01_habr" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
        </TransactionController>
        <hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="UC01_01_01_allPage" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https_habr" enabled="true">
              <stringProp name="HTTPSampler.domain">habr.com</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">/ru/articles/349860/</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="all_page" enabled="true">
                <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
                <stringProp name="BoundaryExtractor.refname">all_page</stringProp>
                <stringProp name="BoundaryExtractor.lboundary">#</stringProp>
                <stringProp name="BoundaryExtractor.rboundary">#</stringProp>
                <stringProp name="BoundaryExtractor.default"></stringProp>
                <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
                <stringProp name="BoundaryExtractor.match_number">-1</stringProp>
              </BoundaryExtractor>
              <hashTree/>
            </hashTree>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="all_page" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree/>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="UC01_01_02_piecePage" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="jsr223_piece_page">
              <stringProp name="scriptLanguage">groovy</stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="cacheKey">true</stringProp>
              <stringProp name="script">counter = 10
jsr223_piece_page = &quot;&quot;


while (counter &lt; 221){
	jsr223_piece_page += vars.get(&quot;all_page_&quot; + counter) + &quot;\n&quot;
	counter += 1
	}

vars.put(&quot;piece_of_page&quot;, jsr223_piece_page)
return jsr223_piece_page
</stringProp>
            </JSR223Sampler>
            <hashTree>
              <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="chapter_1" enabled="true">
                <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
                <stringProp name="BoundaryExtractor.refname">chapter_1</stringProp>
                <stringProp name="BoundaryExtractor.lboundary">&lt;h1&gt;</stringProp>
                <stringProp name="BoundaryExtractor.rboundary">&lt;/h1&gt;</stringProp>
                <stringProp name="BoundaryExtractor.default"></stringProp>
                <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
                <stringProp name="BoundaryExtractor.match_number">1</stringProp>
                <stringProp name="Sample.scope">variable</stringProp>
                <stringProp name="Scope.variable">piece_of_page</stringProp>
              </BoundaryExtractor>
              <hashTree/>
              <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="text_for_ch_1" enabled="true">
                <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
                <stringProp name="BoundaryExtractor.refname">text_for_ch_1</stringProp>
                <stringProp name="BoundaryExtractor.lboundary">&lt;/h1&gt;</stringProp>
                <stringProp name="BoundaryExtractor.rboundary">&lt;h2&gt;</stringProp>
                <stringProp name="BoundaryExtractor.default"></stringProp>
                <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
                <stringProp name="BoundaryExtractor.match_number">1</stringProp>
                <stringProp name="Sample.scope">variable</stringProp>
                <stringProp name="Scope.variable">piece_of_page</stringProp>
              </BoundaryExtractor>
              <hashTree/>
              <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="chapters" enabled="true">
                <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
                <stringProp name="BoundaryExtractor.refname">chapters</stringProp>
                <stringProp name="BoundaryExtractor.lboundary">&lt;h2&gt;</stringProp>
                <stringProp name="BoundaryExtractor.rboundary">&lt;/h2&gt;</stringProp>
                <stringProp name="BoundaryExtractor.default"></stringProp>
                <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
                <stringProp name="BoundaryExtractor.match_number">-1</stringProp>
                <stringProp name="Sample.scope">variable</stringProp>
                <stringProp name="Scope.variable">piece_of_page</stringProp>
              </BoundaryExtractor>
              <hashTree/>
              <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="text_for_chapter" enabled="true">
                <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
                <stringProp name="BoundaryExtractor.refname">text_for_chapter</stringProp>
                <stringProp name="BoundaryExtractor.lboundary">&lt;/h2&gt;</stringProp>
                <stringProp name="BoundaryExtractor.rboundary">&lt;h2&gt;</stringProp>
                <stringProp name="BoundaryExtractor.default"></stringProp>
                <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
                <stringProp name="BoundaryExtractor.match_number">-1</stringProp>
                <stringProp name="Sample.scope">variable</stringProp>
                <stringProp name="Scope.variable">piece_of_page</stringProp>
              </BoundaryExtractor>
              <hashTree/>
              <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="tasks_10_16" enabled="true">
                <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
                <stringProp name="BoundaryExtractor.refname">tasks_10_16</stringProp>
                <stringProp name="BoundaryExtractor.lboundary">&lt;h2&gt;Задачи — 4&lt;/h2&gt;</stringProp>
                <stringProp name="BoundaryExtractor.rboundary">&lt;h2&gt;Post scriptum&lt;/h2&gt;</stringProp>
                <stringProp name="BoundaryExtractor.default"></stringProp>
                <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
                <stringProp name="BoundaryExtractor.match_number">1</stringProp>
                <stringProp name="Sample.scope">variable</stringProp>
                <stringProp name="Scope.variable">piece_of_page</stringProp>
              </BoundaryExtractor>
              <hashTree/>
              <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="postScriptum" enabled="true">
                <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
                <stringProp name="BoundaryExtractor.refname">postScriptum</stringProp>
                <stringProp name="BoundaryExtractor.lboundary">&lt;a name=&quot;Post_scriptum&quot;&gt;&lt;/a&gt;</stringProp>
                <stringProp name="BoundaryExtractor.rboundary">:)</stringProp>
                <stringProp name="BoundaryExtractor.default"></stringProp>
                <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
                <stringProp name="BoundaryExtractor.match_number">1</stringProp>
                <stringProp name="Sample.scope">variable</stringProp>
                <stringProp name="Scope.variable">piece_of_page</stringProp>
              </BoundaryExtractor>
              <hashTree/>
            </hashTree>
            <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="jsr223_dirty_to_clear_text">
              <stringProp name="scriptLanguage">groovy</stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="cacheKey">true</stringProp>
              <stringProp name="script">dirty_texts = &quot;&quot;
clear_texts = &quot;&quot;
chapters_and_texts = &quot;&quot;
list_range = Integer.parseInt(vars.get(&quot;text_for_chapter_matchNr&quot;))
 

// Очищающая от html тегов функция

def String ch_and_text(chapters_and_texts, targer_text, target_charapter, q){
	dirty_text = vars.get(targer_text)
	chapter = vars.get(target_charapter)
	
	clear_text = dirty_text.replaceAll(&quot;\\&lt;[^&gt;]*&gt;&quot;,&quot;&quot;)
	clear_texts += clear_text + &quot;\n&quot;

	chapter_and_text = chapter + clear_text

	name = &quot;chapter_and_text_&quot; + q.toString()
	leng = &quot;chapter_and_text_length_&quot; + q.toString()
	count_length = chapter_and_text.length()
	
	vars.put(name, chapter_and_text)
	vars.put(leng, count_length.toString())

	count_chapter_len = q  + &quot; : &quot; + chapter + &quot; : &quot; + count_length.toString()
	
	vars.put(&quot;toFile_&quot; + q, count_chapter_len)
	
	chapters_and_texts +=  chapter_and_text + (&quot;-&quot; * 30) + &quot;\n&quot;
	return (chapters_and_texts)
	}


// FIRST CHAPTER
q = 1
chapters_and_texts = ch_and_text(chapters_and_texts, &quot;text_for_ch_1&quot;, &quot;chapter_1&quot;, q)


// OTHER CHAPTERS
int i = 1
for(i; i &lt; list_range - 1;i++){
	q = i + 1
	chapters_and_texts = ch_and_text(chapters_and_texts, &quot;text_for_chapter_&quot; + i, &quot;chapters_&quot; + i, q)
	}


// TASKS 10-16
q = 16
chapters_and_texts = ch_and_text(chapters_and_texts, &quot;tasks_10_16&quot;, &quot;chapters_16&quot;, q)


// POST SCRIPTUM
q = 17
chapters_and_texts = ch_and_text(chapters_and_texts, &quot;postScriptum&quot;, &quot;chapters_17&quot;, q)


return (chapters_and_texts)</stringProp>
            </JSR223Sampler>
            <hashTree/>
          </hashTree>
          <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="JSR223_all_to_file">
            <stringProp name="scriptLanguage">groovy</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="script">list_range = Integer.parseInt(vars.get(&quot;chapters_matchNr&quot;))
int counter = 1


def f = new File(&quot;${path_for_file}&quot;)
f.text = &quot;&quot;
def writer = new FileWriter(f, true)

for(counter; counter &lt;= list_range; counter++){
	string_to_file = vars.get(&quot;toFile_&quot; + counter)
	writer.write(string_to_file + &quot;\n&quot;)
	}
writer.close()
</stringProp>
          </JSR223Sampler>
          <hashTree/>
        </hashTree>
        <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
          <boolProp name="displayJMeterProperties">false</boolProp>
          <boolProp name="displayJMeterVariables">true</boolProp>
          <boolProp name="displaySystemProperties">false</boolProp>
        </DebugSampler>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
